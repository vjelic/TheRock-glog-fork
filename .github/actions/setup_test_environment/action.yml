name: "Setup test environment"

inputs:
  VENV_DIR:
    type: string
    required: true
  OUTPUT_ARTIFACTS_DIR:
    type: string
    required: true
  ARTIFACT_RUN_ID:
    type: string
  AMDGPU_FAMILIES:
    type: string
  FETCH_ARTIFACT_ARGS:
    type: string
  PLATFORM:
    type: string

runs:
  using: "composite"
  steps:
    - name: "Setting up Python"
      id: setup_python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version: 3.11

    - name: Create Python venv
      shell: bash
      env:
        VENV_DIR: ${{ inputs.VENV_DIR }}
      run: |
        python build_tools/setup_venv.py ${VENV_DIR} \
          --activate-in-future-github-actions-steps

    - name: Install test requirements
      shell: bash
      run: |
        pip install -r requirements-test.txt
        pip freeze

    - name: Install the AWS tool
      if: ${{ inputs.PLATFORM == 'linux'}}
      shell: bash
      run: ./dockerfiles/cpubuilder/install_awscli.sh

    - name: Install the AWS tool
      if: ${{ inputs.PLATFORM == 'windows'}}
      shell: bash
      run: |
        choco install --no-progress -y awscli
        echo "$PATH;C:\Program Files\Amazon\AWSCLIV2" >> $GITHUB_PATH

    - name: Download and Unpack Artifacts
      shell: bash
      env:
        OUTPUT_ARTIFACTS_DIR: ${{ inputs.OUTPUT_ARTIFACTS_DIR }}
        ARTIFACT_RUN_ID: ${{ inputs.ARTIFACT_RUN_ID }}
        AMDGPU_FAMILIES: ${{ inputs.AMDGPU_FAMILIES }}
        FETCH_ARTIFACT_ARGS: ${{ inputs.FETCH_ARTIFACT_ARGS }}
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        python ./build_tools/install_rocm_from_artifacts.py \
          --run-id=${ARTIFACT_RUN_ID} \
          --amdgpu-family=${AMDGPU_FAMILIES} \
          --output-dir=${OUTPUT_ARTIFACTS_DIR} \
          ${FETCH_ARTIFACT_ARGS}
