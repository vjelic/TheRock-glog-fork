name: Test PyTorch Wheels

on:
  workflow_dispatch:
    inputs:
      amdgpu_families:
        required: true
        type: string
        default: "gfx94X-dcgpu"
      python_version:
        required: true
        type: string
        default: "cp312-cp312"
      s3_bucket:
        required: true
        type: string
        default: "therock-nightly-python"
      s3_subdir:
        required: true
        type: string
        default: "v2"
      s3_cloudfront:
        required: true
        type: string
        default: "d2awnip2yjpvqn.cloudfront.net"
      test_runs_on:
        required: true
        type: string
        default: "linux-mi300-1gpu-ossci-rocm"

  workflow_call:
    inputs:
      amdgpu_families:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string
      s3_subdir:
        required: true
        type: string
      s3_cloudfront:
        required: true
        type: string
      test_runs_on:
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  test_wheels:
    name: Test PyTorch Wheels | ${{ inputs.amdgpu_families }}
    runs-on: ${{ inputs.test_runs_on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull test container image
        run: docker pull ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:044b113562629f4bd2ec5d2e64b32eee11562d48fb1a75d7493daec9dd8d8292

      - name: Run PyTorch installation and tests inside container
        run: |
          docker run --rm \
            --device=/dev/kfd \
            --device=/dev/dri \
            --group-add video \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e PYTORCH_TEST_WITH_ROCM=1 \
            ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:044b113562629f4bd2ec5d2e64b32eee11562d48fb1a75d7493daec9dd8d8292 \
            bash -c "
              set -euxo pipefail

              python_dir=/opt/python/${{ inputs.python_version }}
              export PATH=\$python_dir/bin:\$PATH
              ln -sf \$python_dir/bin/python /usr/bin/python || true

              echo 'Python version:'
              python --version
              which python

              git config --global user.name 'therockbot'
              git config --global user.email 'therockbot@amd.com'

              cd /workspace && \
              ./external-builds/pytorch/pytorch_torch_repo.py checkout && \
              ./external-builds/pytorch/pytorch_audio_repo.py checkout && \
              ./external-builds/pytorch/pytorch_vision_repo.py checkout

              cd /workspace/external-builds/pytorch/pytorch
              git am --abort || true
              git reset --hard
              git clean -xfd

              index_url='https://${{ inputs.s3_cloudfront }}/${{ inputs.s3_subdir }}/${{ inputs.amdgpu_families }}/'
              python -m pip install --index-url \$index_url torch torchvision torchaudio
              python -m pip install pytest pytest-xdist numpy psutil

              echo "Testing installed torch location:"
              python -c "import torch; print(torch.__file__)"

              rocm-smi || true

              cd /  # run outside source tree
              set +e
              EXIT_CODE=0
              
              for test_file in \
                test/test_nn.py \
                test/test_torch.py \
                test/test_cuda.py \
                test/test_ops.py \
                test/test_unary_ufuncs.py \
                test/test_binary_ufuncs.py \
                test/test_autograd.py \
                torch/_inductor/test_torchinductor.py; do
                  python -m pytest \$test_file -v --continue-on-collection-errors || EXIT_CODE=\$?
              done

              exit \$EXIT_CODE
            "
