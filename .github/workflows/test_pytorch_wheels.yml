name: Test PyTorch Wheels

on:
  workflow_dispatch:
    inputs:
      amdgpu_family:
        required: true
        type: string
        default: "gfx94X-dcgpu"
      test_runs_on:
        required: true
        type: string
        default: "linux-mi300-1gpu-ossci-rocm"
      cloudfront_url:
        description: CloudFront URL pointing to Python index
        required: true
        type: string
        default: "https://d2awnip2yjpvqn.cloudfront.net/v2"
      python_version:
        required: true
        type: string
        default: "3.12"
      torch_version:
        required: true
        type: string

  workflow_call:
    inputs:
      amdgpu_family:
        required: true
        type: string
      test_runs_on:
        required: true
        type: string
      cloudfront_url:
        required: true
        type: string
      python_version:
        required: true
        type: string
      torch_version:
        required: true
        type: string

permissions:
  contents: read

jobs:
  test_wheels:
    name: Test PyTorch Wheels | ${{ inputs.amdgpu_family }}
    runs-on: ${{ inputs.test_runs_on }}
    defaults:
      run:
        shell: bash
    env:
      VENV_DIR: ${{ github.workspace }}/.venv
      TORCH_VERSION: ${{ inputs.torch_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ inputs.python_version }}

      # Here we checkout the same version of PyTorch that wheels were built from
      # so we have the right set of test source files. We _probably_ don't need
      # to run HIPIFY or apply any patches, so we skip those steps to save time.
      # TODO(scotttodd): Windows will need to checkout to a shorter path.
      #                  When Windows runs full tests, fix that and re-enable.
      - name: Checkout PyTorch repository
        if: "contains(inputs.test_runs_on, 'linux')"
        run: |
          python external-builds/pytorch/pytorch_torch_repo.py checkout --no-hipify --no-patch

      - name: Set up virtual environment
        run: |
          python build_tools/setup_venv.py ${VENV_DIR} \
            --packages torch==${TORCH_VERSION} \
            --index-url ${{ inputs.cloudfront_url }} \
            --index-subdir ${{ inputs.amdgpu_family }} \
            --activate-in-future-github-actions-steps

      - name: Install test requirements
        run: |
          python -m pip install -r external-builds/pytorch/requirements-test.txt
          pip freeze

      - name: Run rocm-sdk sanity tests
        run: |
          rocm-sdk test

      - name: Run PyTorch smoketests
        run: |
          pytest -v external-builds/pytorch/smoke-tests

      - name: Run PyTorch tests
        if: "contains(inputs.test_runs_on, 'linux')"
        run: |
          bash external-builds/pytorch/run_linux_pytorch_tests.sh
