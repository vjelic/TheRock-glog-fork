name: Test PyTorch Wheels

on:
  workflow_dispatch:
    inputs:
      amdgpu_families:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string
      s3_subdir:
        required: true
        type: string
      s3_cloudfront:
        required: true
        type: string
      test_runs_on:
        required: true
        type: string
  workflow_call:
    inputs:
      amdgpu_families:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string
      s3_subdir:
        required: true
        type: string
      s3_cloudfront:
        required: true
        type: string
      test_runs_on:
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  test_wheels:
    name: Test PyTorch Wheels | ${{ inputs.amdgpu_families }}
    runs-on: ${{ inputs.test_runs_on }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Checkout PyTorch Source Repos
        run: |
          ./external-builds/pytorch/pytorch_torch_repo.py checkout
          ./external-builds/pytorch/pytorch_audio_repo.py checkout
          ./external-builds/pytorch/pytorch_vision_repo.py checkout

      - name: Pull test container image
        run: docker pull ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:044b113562629f4bd2ec5d2e64b32eee11562d48fb1a75d7493daec9dd8d8292

      - name: Run test container with GPU access
        run: |
          docker run --rm \
            --device=/dev/kfd \
            --device=/dev/dri \
            --group-add video \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:044b113562629f4bd2ec5d2e64b32eee11562d48fb1a75d7493daec9dd8d8292 \
            bash -c "
              set -exuo pipefail

              PYBIN=/opt/python/${{ inputs.python_version }}/bin/python
              INDEX_URL=https://${{ inputs.s3_cloudfront }}/${{ inputs.s3_subdir }}/${{ inputs.amdgpu_families }}/

              \$PYBIN -m pip install --index-url \$INDEX_URL torch torchvision torchaudio
              \$PYBIN -m pip install pytest pytest-xdist numpy psutil

              cd /workspace/external-builds/pytorch/pytorch
              export PYTORCH_TEST_WITH_ROCM=1

              rocm-smi || true

              set +e
              EXIT_CODE=0

              \$PYBIN -m pytest test/test_nn.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest test/test_torch.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest test/test_cuda.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest test/test_ops.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest test/test_unary_ufuncs.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest test/test_binary_ufuncs.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest test/test_autograd.py -v --continue-on-collection-errors || EXIT_CODE=\$?
              \$PYBIN -m pytest torch/_inductor/test_torchinductor.py -v --continue-on-collection-errors || EXIT_CODE=\$?

              exit \$EXIT_CODE
            "
