name: Build Linux PyTorch Wheels

on:
  workflow_call:
    inputs:
      AMDGPU_FAMILIES:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string
      s3_subdir:
        required: true
        type: string
      s3_cloudfront:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      AMDGPU_FAMILIES:
        required: true
        type: string
      python_version:
        required: true
        type: string
      s3_bucket:
        required: true
        type: string
      s3_subdir:
        required: true
        type: string
      s3_cloudfront:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  set-runner:
    runs-on: ubuntu-24.04
    outputs:
      runner_label: ${{ steps.set.outputs.runner_label }}
    steps:
      - id: set
        run: |
          case "${{ inputs.AMDGPU_FAMILIES }}" in
            gfx94X-dcgpu)
              echo "runner_label=linux-mi300-1gpu-ossci-rocm" >> "$GITHUB_OUTPUT"
              ;;
            gfx120X-all)
              echo "runner_label=linux-rx9070-gpu-rocm" >> "$GITHUB_OUTPUT"
              ;;
            gfx110X-dgpu)
              echo "runner_label=linux-rx7900-gpu-rocm" >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo "runner_label=ubuntu-24.04" >> "$GITHUB_OUTPUT"
              ;;
          esac

  build_pytorch_wheels:
    needs: set-runner
    runs-on: ${{ needs.set-runner.outputs.runner_label }}
    name: Build Linux PyTorch Wheels | ${{ inputs.AMDGPU_FAMILIES }} | Python ${{ inputs.python_version }}
    env:
      OUTPUT_DIR: ${{ github.workspace }}/output
      PACKAGE_DIST_DIR: ${{ github.workspace }}/output/packages/dist
      S3_BUCKET_PY: ${{ inputs.s3_bucket }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure Git Identity
        run: |
          git config --global user.name "therockbot"
          git config --global user.email "therockbot@amd.com"

      - name: Run Docker container with ROCm access
        run: |
          docker run --rm \
            --device=/dev/kfd \
            --device=/dev/dri \
            --group-add video \
            --group-add render \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e PYTHON_VERSION=${{ inputs.python_version }} \
            -e AMDGPU_FAMILIES=${{ inputs.AMDGPU_FAMILIES }} \
            -e S3_CLOUDFRONT=${{ inputs.s3_cloudfront }} \
            -e S3_SUBDIR=${{ inputs.s3_subdir }} \
            -e PACKAGE_DIST_DIR=${{ env.PACKAGE_DIST_DIR }} \
            ghcr.io/rocm/therock_build_manylinux_x86_64@sha256:044b113562629f4bd2ec5d2e64b32eee11562d48fb1a75d7493daec9dd8d8292 \
            bash ./external-builds/pytorch/pytorch_tests/build_pytorch_wheels.sh

      - name: Setup Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: 3.12

      - name: Update AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS Credentials
        if: always()
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-nightly-releases

      - name: Sanity Check Wheel
        run: |
          python external-builds/pytorch/sanity_check_wheel.py ${{ env.PACKAGE_DIST_DIR }}/

      - name: Upload wheels to S3
        if: ${{ github.repository_owner == 'ROCm' }}
        run: |
          aws s3 cp ${{ env.PACKAGE_DIST_DIR }}/ s3://${{ env.S3_BUCKET_PY }}/${{ inputs.s3_subdir }}/${{ inputs.AMDGPU_FAMILIES }}/ \
            --recursive --exclude "*" --include "*.whl"

      - name: (Re-)Generate Python package release index
        if: ${{ github.repository_owner == 'ROCm' }}
        run: |
          pip install boto3 packaging
          python ./build_tools/third_party/s3_management/manage.py ${{ inputs.s3_subdir }}/${{ inputs.AMDGPU_FAMILIES }}
