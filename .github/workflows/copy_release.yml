name: Copy release to dev bucket

on:
  workflow_dispatch:
    inputs:
      rocm_version:
        description: ROCm version to copy
        type: string
      amdgpu_family:
        type: choice
        options:
          - gfx110X-dgpu
          - gfx1151
          - gfx120X-all
          - gfx94X-dcgpu
          - gfx950-dcgpu
      python_version:
        type: choice
        options:
          - 3.11
          - 3.12
          - 3.13
      include_torch:
        type: boolean
        default: false
      sourcesubdir:
        type: choice
        options:
          - v2
          - v2-staging
      destsubdir:
        type: string
        default: v2
permissions:
  contents: read

jobs:
  copy_python_packages:
    name: Copy release | ${{ inputs.sourcesubdir }}/${{ inputs.amdgpu_family }} | ${{ inputs.rocm_version }} | Python ${{ inputs.python_version }}
    runs-on: ubuntu-24.04
    permissions:
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install the AWS tool
        run: ./dockerfiles/install_awscli.sh

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-dev-releases

      - name: Select Python version
        run: |
          python build_tools/github_actions/python_to_cp_version.py \
            --python-version ${{ inputs.python_version }}

      - name: Copy ROCm packages between S3 buckets
        run: |
          aws s3 cp \
            s3://therock-nightly-python/${{ inputs.sourcesubdir }}/${{ inputs.amdgpu_family }}/ \
            s3://therock-dev-python/${{ inputs.destsubdir }}/${{ inputs.amdgpu_family }}/ \
            --recursive --exclude "*"  --include "rocm*${{ inputs.rocm_version }}*"

      - name: Copy torch wheels between S3 buckets
        if: ${{ inputs.include_torch == 'true' }}
        run: |
          aws s3 cp \
            s3://therock-nightly-python/${{ inputs.sourcesubdir }}/${{ inputs.amdgpu_family }}/ \
            s3://therock-dev-python/${{ inputs.destsubdir }}/${{ inputs.amdgpu_family }}/ \
            --recursive --exclude "*"  --include "torch*${{ inputs.rocm_version }}*${{ env.cp_version }}*"

      - name: (Re-)Generate Python package release index
        env:
          S3_BUCKET_PY: "therock-dev-python"
          CUSTOM_PREFIX: "${{ inputs.destsubdir }}/${{ inputs.amdgpu_family }}"
        run: |
          pip install boto3 packaging
          python ./build_tools/third_party/s3_management/manage.py ${CUSTOM_PREFIX}
